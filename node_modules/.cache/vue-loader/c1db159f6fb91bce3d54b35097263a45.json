{"remainingRequest":"D:\\Vue\\labq5 - 副本\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\Vue\\labq5 - 副本\\src\\views\\Home.vue?vue&type=template&id=fae5bece&scoped=true","dependencies":[{"path":"D:\\Vue\\labq5 - 副本\\src\\views\\Home.vue","mtime":1629032962732},{"path":"D:\\Vue\\labq5 - 副本\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Vue\\labq5 - 副本\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Vue\\labq5 - 副本\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"D:\\Vue\\labq5 - 副本\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Vue\\labq5 - 副本\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:PGRpdiBjbGFzcz0iZXZlbnRzIj4NCiAgICA8RXZlbnRDYXJkIHYtZm9yPSJldmVudCBpbiBldmVudHMiIDprZXk9ImV2ZW50LmlkIiA6ZXZlbnQ9ImV2ZW50IiAvPg0KICA8L2Rpdj4NCiAgIDxicj4NCiAgIDxicj4NCiAgPHJvdXRlci1saW5rIDp0bz0ieyBuYW1lOiAnSG9tZScgfSI+R28gdG8gdGhlIHRvcDwvcm91dGVyLWxpbms+"},{"version":3,"sources":["D:\\Vue\\labq5 - 副本\\src\\views\\Home.vue"],"names":[],"mappings":"AACA,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EACrE,CAAC,CAAC,CAAC,CAAC,CAAC;GACJ,CAAC,CAAC,CAAC;GACH,CAAC,CAAC,CAAC;EACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"D:/Vue/labq5 - 副本/src/views/Home.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"events\">\r\n    <EventCard v-for=\"event in events\" :key=\"event.id\" :event=\"event\" />\r\n  </div>\r\n   <br>\r\n   <br>\r\n  <router-link :to=\"{ name: 'Home' }\">Go to the top</router-link>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\n// import HelloWorld from \"@/components/HelloWorld.vue\";\r\nimport EventCard from '@/components/EventCard.vue'\r\nimport EventService from '@/services/EventService.js'\r\n//import { watchEffect } from '@vue/runtime-core'\r\n\r\nexport default {\r\n  //receive page variable props in the component\r\n  name: 'EventList',\r\n  props: {\r\n    page: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    perPage: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  components: {\r\n    EventCard\r\n    // register it as a child component\r\n  },\r\n  data() {\r\n    return {\r\n      events: null,\r\n      totalEvents: 0 // <-- Added this to store totalEvents\r\n    }\r\n  },\r\n  /*created() {\r\n    watchEffect(() => {\r\n      EventService.getEvents(this.perPage, this.page)\r\n        .then((response) => {\r\n          this.events = response.data.data\r\n          this.totalEvents = response.headers['x-total-count'] // <-- Store it\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n    })\r\n  },*/\r\n\r\n  beforeRouteEnter(routeTo, routeFrom, next) {\r\n    EventService.getEvents(parseInt(routeTo.query.perPage) || 5)\r\n      .then((response) => {\r\n        next((comp) => {\r\n          comp.events = response.data\r\n          comp.totalEvents = response.headers['x-total-count']\r\n        })\r\n      })\r\n      .catch(() => {\r\n        next({ name: 'NetworkError' })\r\n      })\r\n  },\r\n  beforeRouteUpdate(routeTo, routeFrom, next) {\r\n    EventService.getEventsparseInt(parseInt(routeTo.query.perPage) || 5)\r\n      .then((response) => {\r\n        this.events = response.data\r\n        this.totalEvents = response.headers['x-total-count']\r\n        next()\r\n      })\r\n      .catch(() => {\r\n        next({ name: 'NetworkError' })\r\n      })\r\n  },\r\n    computed: {\r\n    hasNextPage() {\r\n      // First, calculate total pages\r\n      let totalPages = Math.ceil(this.totalEvents / 2) // 2 is events per page\r\n\r\n      // Then check to see if the current page is less than the total pages.\r\n      return this.perPage < totalPages\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.events {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n</style>"]}]}